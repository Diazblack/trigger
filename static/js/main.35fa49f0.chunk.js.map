{"version":3,"sources":["images/left.svg","images/right.svg","images/delete.svg","images/edit.svg","images/home.svg","images/analytics.svg","helpers/date.js","components/Calendar.js","actions/calendarActions.js","actions/types.js","actions/foodActions.js","components/Foods.js","actions/foodFormActions.js","components/FoodForm.js","components/Nav.js","reducers/foodReducer.js","reducers/foodFormReducer.js","reducers/calendarReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","daysOfWeek","unixDateToTime","unixDate","date","Date","hours","minutes","convert24HourTime","getHours","getMinutes","substr","hoursToUnixTime","hourString","selectedDate","trimTime","replace","count","length","halfDay","slice","toLowerCase","parseInt","convertHours","Calendar","_this$props","this","props","incrementDate","decrementDate","parseDate","prevDate","nextDate","currDate","getDate","day","getDay","dateHelper","react_default","a","createElement","id","src","leftButton","className","alt","onClick","rightButton","Component","connect","state","calendar","changeDate","arguments","undefined","dispatch","type","payload","setHours","foodEntryPost","response","foodData","_JSON$stringify","foodEntryUrl","concat","fetch","method","headers","content-type","body","JSON","stringify","Object","defineProperty","time","then","json","updateFoodData","status","addStatus","name","Foods","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteDialog","event","card","target","parentNode","dialog","querySelector","editButton","deleteButton","style","display","visibility","cancelDelete","confirmDelete","split","innerText","destroyFood","foodsContainer","current","scrollTop","statusMessage","bind","assertThisInitialized","React","createRef","fetchFoods","nextProps","newFood","foods","push","_this2","foodItems","map","food","key","attributes","ref","items","item","changedItem","data","url","ok","toggleDisplayAddForm","FoodForm","onChange","onSubmit","addFood","addReaction","renderResponse","clearResponse","formContainer","fieldsContainer","responseContainer","foodName","foodTime","toggleDisplay","setState","displayAddForm","bottom","setTimeout","value","preventDefault","createFood","foodResponse","_this3","resetState","_this4","selectedTab","placeholder","capType","charAt","toUpperCase","namePlaceholder","foodForm","foodUrl","isNaN","catch","error","Nav","addFormBackground","button","addForm","addFormDisplayed","homeButton","analyticsButton","initialState","foodFormReducer","newState","calendarReducer","action","objectSpread","combineReducers","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Calendar","components_Foods","components_FoodForm","components_Nav","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35fa49f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left.3a59d4ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.53140cf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.8f325929.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.fa8bef4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.4ae41237.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics.040a3c41.svg\";","export const unixToDate = (unixDate) => {\n  let parseDate = new Date(unixDate * 1000)\n  let month = parseDate.toLocaleString('en-us', { month: 'long' });\n  let date = month + \" \" + parseDate.getDate() + \", \" + parseDate.getFullYear();\n\n  return date;\n}\n\nconst daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"]\n\nexport const unixToDateArray = (unixDate) => {\n  let parseDate = new Date(unixDate * 1000)\n  let prevDate = new Date((unixDate - 86400) * 1000 )\n  let nextDate = new Date((unixDate + 86400) * 1000 )\n  let currDate = parseDate.getDate();\n\n  return {\n    prevDate: {\n      date: prevDate.getDate(),\n      day: daysOfWeek[prevDate.getDay()]\n    },\n    currDate: {\n      date: currDate,\n      day: daysOfWeek[parseDate.getDay()]\n    },\n    nextDate: {\n      date: nextDate.getDate(),\n      day: daysOfWeek[nextDate.getDay()]\n    }\n  }\n}\n\nexport const unixDateToTime = (unixDate) => {\n  let date = new Date(unixDate * 1000)\n  let hours = date.getHours();\n  let minutes = \"0\" + date.getMinutes();\n\n  return convert24HourTime(hours, minutes.substr(-2))\n}\n\nfunction convert24HourTime(hours, minutes) {\n  if (hours > 12) {\n    return (hours - 12) + \":\" + minutes + \" PM\"\n  } else {\n    return hours + \":\" + minutes + \" AM\"\n  }\n}\n\nexport const hoursToUnixTime = (hourString, selectedDate) => {\n  let trimTime = hourString.replace(/ /g,'');\n  let count = trimTime.length;\n  let halfDay = trimTime.slice(-2).toLowerCase();\n  let minutes = parseInt(trimTime.slice(count-4, count-2));\n  let hours = convertHours(trimTime, count, halfDay);\n  let unixTime = selectedDate + (hours * 3600) + ( minutes * 60);\n\n  return unixTime;\n}\n\nfunction convertHours(trimTime, count, halfDay) {\n  let hours = 0\n  if (count === 6) {\n    hours = parseInt(trimTime.slice(0,1));\n    }\n  else if (count === 7) {\n    hours = parseInt(trimTime.slice(0,2));\n  }\n  if (halfDay === \"pm\") hours = hours + 12;\n\n  return hours\n}\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeDate, incrementDate, decrementDate } from '../actions/calendarActions';\nimport * as dateHelper from '../helpers/date'\nimport leftButton from \"../images/left.svg\";\nimport rightButton from \"../images/right.svg\";\n\nclass Calendar extends Component {\n\n  render() {\n\n    const { unixDate, incrementDate, decrementDate } = this.props;\n    const selectedDate = dateHelper.unixToDateArray(this.props.unixDate)\n\n    return (\n      <div>\n        <section id=\"calendar-container\">\n          <img src={leftButton} \n               className=\"calendar-button\" \n               alt=\"decrement date\" \n               onClick={() => decrementDate(unixDate)}/>\n          <div className=\"calendar-dates-container\">\n            <div className=\"date-container\">\n              <h2>{selectedDate.prevDate.date}</h2>\n              <h4>{selectedDate.prevDate.day}</h4>\n            </div>\n            <div className=\"date-container\" id=\"selected-date-container\">\n              <h2>{selectedDate.currDate.date}</h2>\n              <h4>{selectedDate.currDate.day}</h4>\n            </div>\n            <div className=\"date-container\">\n              <h2>{selectedDate.nextDate.date}</h2>\n              <h4>{selectedDate.nextDate.day}</h4>\n            </div>\n          </div>\n          <img src={rightButton} \n               className=\"calendar-button\" \n               alt=\"increment date\" \n               onClick={() => incrementDate(unixDate)}/>\n        </section>\n        </div>\n    )\n  }\n}\n\nCalendar.propTypes = {\n  unixDate: PropTypes.number,\n  changeDate: PropTypes.func.isRequired,\n  incrementDate: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  unixDate: state.calendar.unixDate,\n});\n\nexport default connect(mapStateToProps, { changeDate, \n                                          incrementDate,\n                                          decrementDate })(Calendar);\n\n","import { CHANGE_DATE, INCREMENT_DATE, DECREMENT_DATE } from './types';\n\nexport const changeDate = (date = new Date()) => dispatch => {\n  dispatch({\n    type: CHANGE_DATE,\n    payload: {\n      unixDate: date.setHours(0, 0, 0, 0) / 1000,\n    }\n  })\n};\n\nexport const incrementDate = (date = new Date()) => dispatch => {\n  dispatch({\n    type: INCREMENT_DATE,\n    payload: {\n      unixDate: date + 86400,\n    }\n  })\n}\n\nexport const decrementDate = (date = new Date()) => dispatch => {\n  dispatch({\n    type: DECREMENT_DATE,\n    payload: {\n      unixDate: date - 86400,\n    }\n  })\n}","export const FETCH_FOODS = 'FETCH_FOODS';\nexport const NEW_FOOD = 'NEW_FOOD';\nexport const DISPLAY_ADD_FORM = 'DISPLAY_ADD_FORM';\nexport const DESTROY_FOOD = 'DESTROY_FOOD';\nexport const CHANGE_DATE = 'CHANGE_DATE';\nexport const INCREMENT_DATE = 'INCREMENT_DATE';\nexport const DECREMENT_DATE = 'DECREMENT_DATE';\n\n","import { FETCH_FOODS, NEW_FOOD, DESTROY_FOOD } from './types';\nimport * as dateHelper from '../helpers/date';\n\nexport const fetchFoods = (date) => dispatch =>  {\n  fetch(`https://trigger-backend.herokuapp.com/api/v1/day_summary?date=${date}`)\n   .then(response => response.json())\n   .then(foods => dispatch({\n     type: FETCH_FOODS,\n     payload: foods.data\n   })\n );\n}\n\nexport const createFood = (foodData) => dispatch => {\n  let foodUrl = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}s`\n\nfetch(foodUrl, {\n  method: 'POST',\n  headers: { 'content-type': 'application/json' },\n  body: JSON.stringify(foodData)\n})\n  .then(response => response.json())\n  .then(json => {\n    if (!isNaN(foodData.time)) {\n      foodEntryPost(json, foodData)\n      addStatus(json, foodData)\n      return foodData\n    }\n    else {\n      updateFoodData(json, foodData)\n      return foodData\n    }\n  })\n  .then(food => dispatch({\n    type: NEW_FOOD,\n    payload: food\n  }))\n  .catch(error => dispatch({\n    type: NEW_FOOD,\n    payload: {\n      status: `Something went wrong. ${foodData.name} couldn't be created.`\n    }\n  }))\n }\n\nconst foodEntryPost = (response, foodData) => {\n  let foodEntryUrl = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}_entries`\n\n  fetch(foodEntryUrl, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      [`${foodData.type}_id`]: response.id,\n      time: foodData.time\n    })\n  })\n  .then(response => response.json())\n}\n\nconst updateFoodData = (response, foodData) => { \n  foodData.id = response.id\n  foodData.status = response.status\n}\n\nconst addStatus = (response, foodData) => { \n  response.status = `Created entry for ${foodData.name} at ${dateHelper.unixDateToTime(foodData.time)}`\n  updateFoodData(response, foodData)\n}\n\nexport const destroyFood = (foodData) => dispatch => {\n  let url = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}_entries/${foodData.id}`\n  fetch(url, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n    .then(response => {\n      if(response.ok) {\n        dispatch({\n          type: DESTROY_FOOD,\n          payload: {\n            id: foodData.id,\n            status: `Successfully deleted ${foodData.name} ${foodData.type} entry .`\n          }\n        })\n      } else {\n        dispatch({\n          type: DESTROY_FOOD,\n          payload: {\n            id: foodData.id,\n            status: `Something went wrong.  Unable to delete ${foodData.name} ${foodData.type} entry .`\n          }\n        })\n      }\n    });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFoods, destroyFood } from '../actions/foodActions';\nimport * as dateHelper from '../helpers/date';\nimport deleteButton from \"../images/delete.svg\";\nimport editButton from \"../images/edit.svg\";\n\nclass Foods extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteDialog = this.deleteDialog.bind(this);\n    this.cancelDelete = this.cancelDelete.bind(this);\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.foodsContainer = React.createRef();\n    this.statusMessage = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchFoods(this.props.unixDate);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newFood &&\n      (nextProps.newFood.time >= this.props.unixDate) &&\n      (nextProps.newFood.time < this.props.unixDate + 86400)) {\n      this.props.foods.push(nextProps.newFood);\n    } else if (this.props.unixDate !== nextProps.unixDate) {\n      this.props.fetchFoods(nextProps.unixDate);\n    }\n  }\n\n  deleteDialog = (event) => {\n    let card = event.target.parentNode.parentNode;\n    let dialog = card.querySelector(\".delete-dialog-container\");\n    let editButton = card.querySelector(\".edit-card\");\n    let deleteButton = card.querySelector(\".delete-card\");\n\n    dialog.style.display = \"flex\";\n    editButton.style.visibility = \"hidden\";\n    deleteButton.style.visibility = \"hidden\";\n  }\n\n  cancelDelete = (event) => {\n    let card = event.target.parentNode.parentNode.parentNode.parentNode;\n    let dialog = card.querySelector(\".delete-dialog-container\");\n    let editButton = card.querySelector(\".edit-card\");\n    let deleteButton = card.querySelector(\".delete-card\");\n    \n    dialog.style.display = \"none\";\n    editButton.style.visibility = \"visible\";\n    deleteButton.style.visibility = \"visible\";\n  }\n\n  confirmDelete = (event) => {\n    let card = event.target.parentNode.parentNode.parentNode.parentNode;\n    let type = card.id.split(\"-\")[0]\n    let id = card.id.split(\"-\")[2]\n    let name = card.querySelector(\".card-name\").innerText;\n    let foodData = {\n      id: id,\n      type: type,\n      name: name\n    }\n\n    this.props.destroyFood(foodData);\n    this.foodsContainer.current.scrollTop = 0;\n    this.statusMessage.current.style.display = \"block\";\n  }\n\n  render() {\n\n    const foodItems = this.props.foods.map(food => (\n      <div key={[food.id, food.attributes.type]}\n           id={food.attributes.type + \"-card-\" + food.id}\n           className={\"card-container \" + food.attributes.type} >\n        <div className=\"card-container-visible\">\n          <div className=\"name-time-container\" >\n            <h5 className=\"card-name\"> {food.attributes.name} </h5>\n            <h5 className=\"card-time\"> {dateHelper.unixDateToTime(food.attributes.time)}</h5>\n          </div>\n          <img src={editButton}\n               className=\"edit-card\"\n               alt=\"edit food or reaction button\" />\n          <img src={deleteButton}\n               className=\"delete-card\" \n               alt=\"delete food or reaction button\"\n               onClick={event => this.deleteDialog(event)} />\n        </div>\n        <div className=\"card-container-hidden\">\n          <div className=\"delete-dialog-container\" \n               ref={\"delete-dialog-\" + food.attributes.type + \"-\" + food.id}>\n            <div className=\"delete-dialog-prompt\">\n              <h5>Are you sure you want to delete {food.attributes.name}?</h5>\n            </div>\n            <div className=\"delete-dialog-buttons\">\n              <button className=\"dialog-button\" \n                      onClick={event => this.cancelDelete(event)}>\n                Cancel\n              </button>\n              <button className=\"dialog-button\"\n                      onClick={event => this.confirmDelete(event)}>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ))\n\n    return(\n      <div id=\"day-summary-container\" ref={this.foodsContainer}>\n        <div className=\"card-container status\" ref={this.statusMessage}>\n          <h5 id=\"foods-status\">{this.props.status}</h5>\n        </div>\n        {foodItems}\n      </div>\n    )\n  }\n}\n\nFoods.propTypes = {\n  fetchFoods: PropTypes.func.isRequired,\n  destroyFood: PropTypes.func.isRequired,\n  foods: PropTypes.array.isRequired,\n  newFood: PropTypes.object,\n  status: PropTypes.string,\n  unixDate: PropTypes.number,\n}\n\nconst mapStateToProps = state => ({\n  foods: state.foods.items,\n  newFood: state.foods.item,\n  status: state.foods.changedItem.status,\n  unixDate: state.calendar.unixDate,\n});\n\nexport default connect(mapStateToProps, { fetchFoods, destroyFood })(Foods);\n","import { DISPLAY_ADD_FORM } from './types';\n\nexport const toggleDisplayAddForm = () => ({\n  type: DISPLAY_ADD_FORM\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFood } from '../actions/foodActions';\nimport * as dateHelper from '../helpers/date';\nimport { toggleDisplayAddForm } from '../actions/foodFormActions';\n\nclass FoodForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'food',\n      name: '',\n      time: '',\n      status: ''\n      };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.addFood = this.addFood.bind(this);\n    this.addReaction = this.addReaction.bind(this);\n    this.renderResponse = this.renderResponse.bind(this);\n    this.clearResponse = this.clearResponse.bind(this);\n    this.formContainer = React.createRef();\n    this.fieldsContainer = React.createRef();\n    this.responseContainer = React.createRef();\n    this.foodName = React.createRef();\n    this.foodTime = React.createRef();\n  }\n\n  // change this to will receive props, compare displayAddForm\n  componentDidUpdate() {\n    this.toggleDisplay();\n  }\n\n  resetState() {\n    this.setState({\n      name: '',\n      time: ''\n    })\n  }\n\n  toggleDisplay() {\n    if(this.props.displayAddForm) {\n      this.formContainer.current.style.bottom = \"60px\";\n    } else {\n      this.formContainer.current.style.bottom = \"-280px\";\n      setTimeout(() => {\n        this.fieldsContainer.current.style.visibility = \"visible\";\n        this.responseContainer.current.style.visibility = \"hidden\";\n      }, 500);\n    }\n  }\n\n  addFood() {\n    this.setState({ type: \"food\"})\n  }\n\n  addReaction() {\n    this.setState({ type: \"reaction\" })\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const food = {\n      type: this.state.type,\n      name: this.state.name,\n      time: dateHelper.hoursToUnixTime(this.state.time, this.props.unixDate)\n    }\n    this.props.createFood(food);\n    this.renderResponse(this.props.foodResponse);\n  }\n\n  renderResponse(response) {\n    setTimeout(() => {\n      this.responseContainer.current.style.visibility = \"visible\";\n      this.fieldsContainer.current.style.visibility = \"hidden\";\n      this.resetState();\n    }, 200);\n  }\n\n  clearResponse() {\n    this.resetState();\n    this.responseContainer.current.style.visibility = \"hidden\";\n    this.fieldsContainer.current.style.visibility = \"visible\";\n  }\n\n  render() {\n\n    const selectedTab = (type) => {\n      return type === this.state.type ? \"selected-tab\" : \"\"\n    }\n\n    const namePlaceholder = () => {\n      let type = this.state.type\n      let capType = type.charAt(0).toUpperCase() + type.slice(1)\n      return `Enter Name of ${capType}`;\n    }\n\n    return(\n      <div id=\"food-form-container\" ref={this.formContainer}>\n        <div className=\"food-form-tabs-container\">\n          <div className={\"food-form-tab add-food-tab \" + selectedTab(\"food\")}\n               onClick={this.addFood}>\n            <h4>Add Food</h4>\n          </div>\n          <div className={\"food-form-tab add-reaction-tab \" + selectedTab(\"reaction\")}\n               onClick={this.addReaction}>\n            <h4>Add Reaction</h4>\n          </div>\n        </div>\n        <div id=\"food-form-fields-container\" ref={this.fieldsContainer}>\n          <form onSubmit={this.onSubmit}>\n            <div>\n              <input type=\"text\"\n                     name=\"name\"\n                     value={this.state.name}\n                     ref={this.foodName}\n                     placeholder={namePlaceholder()}\n                     onChange={this.onChange}\n              />\n            </div>\n            <div>\n              <input type=\"text\"\n                     name=\"time\"\n                     value={this.state.time}\n                     ref={this.foodTime}\n                     placeholder=\"Enter Time\"\n                     onChange={this.onChange}\n              />\n              <button type=\"submit\"> Submit </button>\n            </div>\n          </form>\n        </div>\n        <div id=\"food-form-response-container\" ref={this.responseContainer}>\n          <h2 id=\"food-form-response\">{this.props.foodResponse}</h2>\n          <div id=\"response-buttons-container\">\n          <h3 className=\"close-form\" onClick={this.props.toggleDisplayAddForm}>Close</h3>\n          <h3 className=\"close-form\" onClick={this.clearResponse}>Clear</h3>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nFoodForm.propTypes = {\n  createFood: PropTypes.func.isRequired,\n  displayAddForm: PropTypes.bool,\n  foodResponse: PropTypes.string,\n  unixDate: PropTypes.number,\n  toggleDisplayAddForm: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  displayAddForm: state.foodForm.display,\n  foodResponse: state.foods.item.status,\n  unixDate: state.calendar.unixDate,\n});\n\nexport default connect(mapStateToProps, { createFood, toggleDisplayAddForm } )(FoodForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleDisplayAddForm } from '../actions/foodFormActions';\nimport homeButton from \"../images/home.svg\";\nimport analyticsButton from \"../images/analytics.svg\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addFormDisplayed: false\n    }\n    this.displayAddForm = this.displayAddForm.bind(this);\n    this.addForm = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.displayAddForm !== this.props.displayAddForm) {\n      this.addFormBackground();\n    }\n  }\n\n  displayAddForm = () => {\n    this.addFormBackground();\n    this.props.toggleDisplayAddForm()\n  }\n\n  addFormBackground = () => {\n    let button = this.addForm.current\n\n    this.props.displayAddForm ?\n      button.style = \"background-color: #B37C57\" :\n      button.style = \"background-color: red\";\n  }\n\n  render() {\n\n    return (\n      <footer>\n        <img className=\"home-button\" src={homeButton} alt=\"home button\" />\n        <button className=\"add-button\"\n                ref={this.addForm}\n                onClick={this.displayAddForm}>\n          {this.props.displayAddForm ? \"x\" : \"+\"}\n        </button>\n        <img className=\"analytics-button\" src={analyticsButton} alt=\"analytics button\" />\n      </footer>\n    )\n  }\n}\n\nNav.propTypes = {\n  toggleDisplayAddForm: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  displayAddForm: state.foodForm.display,\n});\n\nexport default connect(mapStateToProps, { toggleDisplayAddForm })(Nav);\n","import { FETCH_FOODS, NEW_FOOD, DESTROY_FOOD } from '../actions/types'\nconst initialState = {\n  items: [],\n  item: {},\n  changedItem: {}\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_FOODS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    case NEW_FOOD:\n      return {\n        ...state,\n        item: action.payload\n      }\n    case DESTROY_FOOD:\n      let newState = state;\n      newState.items = state.items.filter(food => {\n        return food.id !== action.payload.id;\n      })\n\n      return {\n        ...newState,\n        changedItem: action.payload\n      }\n\n    default:\n     return state;\n\n  }\n}\n","import { DISPLAY_ADD_FORM } from '../actions/types'\n\nconst initialState = {\n  display: false,\n}\n\nconst foodFormReducer = (state = initialState, action) => {\n  let newState = state\n  switch (action.type) {\n    case DISPLAY_ADD_FORM:\n      return {display: !newState.display}\n    default:\n      return state;\n  }\n};\n\nexport default foodFormReducer;\n","import { CHANGE_DATE, INCREMENT_DATE, DECREMENT_DATE } from '../actions/types'\n\nconst currentDate = () => {\n  let now = new Date()\n\n  return now.setHours(0, 0, 0, 0) / 1000\n}\n\nconst initialState = {\n  unixDate: currentDate(),\n}\n\nconst calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_DATE:\n      return {\n        ...state,\n        unixDate: action.payload.unixDate,\n      }\n    case INCREMENT_DATE:\n      return {\n        ...state,\n        unixDate: action.payload.unixDate,\n      }\n    case DECREMENT_DATE:\n      return {\n        ...state,\n        unixDate: action.payload.unixDate,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default calendarReducer;\n\n","import { combineReducers } from 'redux';\nimport foodReducer from './foodReducer';\nimport foodFormReducer from './foodFormReducer';\nimport calendarReducer from './calendarReducer';\n\nexport default combineReducers({\n  foods: foodReducer,\n  foodForm: foodFormReducer,\n  calendar: calendarReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport Calendar from './components/Calendar';\nimport Foods from './components/Foods';\nimport FoodForm from './components/FoodForm';\nimport Nav from './components/Nav';\n\nimport store from './store';\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <header>\n            <h1>Trigger</h1>\n          </header>\n          <Calendar />\n          <Foods />\n          <FoodForm />\n          <Nav />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}