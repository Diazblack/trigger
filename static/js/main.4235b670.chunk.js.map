{"version":3,"sources":["images/delete.svg","images/left.svg","images/right.svg","images/edit.svg","images/home.svg","images/analytics.svg","helpers/date.js","components/Calendar.js","actions/calendarActions.js","actions/types.js","actions/foodActions.js","components/Foods.js","actions/foodFormActions.js","components/FoodForm.js","components/Nav.js","reducers/foodReducer.js","reducers/foodFormReducer.js","reducers/calendarReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","daysOfWeek","hoursToUnixTime","hourString","selectedDate","trimTime","replace","count","length","halfDay","slice","toLowerCase","minutes","parseInt","hours","convertHours","Calendar","_this$props","this","props","unixDate","incrementDate","decrementDate","parseDate","Date","prevDate","nextDate","currDate","getDate","date","day","getDay","dateHelper","react_default","a","createElement","id","src","leftButton","className","alt","onClick","rightButton","Component","connect","state","calendar","changeDate","arguments","undefined","dispatch","type","payload","setHours","foodPost","foodData","foodUrl","concat","fetch","method","headers","content-type","body","JSON","stringify","then","response","json","typeId","foodEntryPost","_JSON$stringify","foodEntryUrl","Object","defineProperty","time","status","foodEntryPatch","_JSON$stringify2","preparePayload","attributes","name","Foods","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","displayDialog","event","card","target","parentNode","dialog","querySelector","editButton","deleteButton","style","display","visibility","updateDialog","contentEditable","deleteDialog","cancelDialog","confirmUpdate","innerText","split","updateFoodEntry","foodsContainer","current","scrollTop","statusMessage","confirmDelete","destroyFood","closeStatus","bind","assertThisInitialized","React","createRef","fetchFoods","nextProps","_this2","foodItems","foods","map","food","key","convert24HourTime","getHours","getMinutes","substr","ref","items","newFood","item","changedItem","data","url","toggleDisplayAddForm","FoodForm","onChange","onSubmit","addFood","addReaction","renderResponse","clearResponse","formContainer","fieldsContainer","responseContainer","foodName","foodTime","toggleDisplay","setState","displayAddForm","bottom","setTimeout","value","preventDefault","createFood","foodResponse","_this3","resetState","_this4","selectedTab","placeholder","capType","charAt","toUpperCase","namePlaceholder","foodForm","Nav","addFormBackground","button","addForm","addFormDisplayed","homeButton","analyticsButton","initialState","foodFormReducer","newState","calendarReducer","action","objectSpread","combineReducers","push","sort","b","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_Calendar","components_Foods","components_FoodForm","components_Nav","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4235b670.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.8f325929.svg\";","module.exports = __webpack_public_path__ + \"static/media/left.3a59d4ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.53140cf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.fa8bef4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.4ae41237.svg\";","module.exports = __webpack_public_path__ + \"static/media/analytics.040a3c41.svg\";","export const unixToDate = (unixDate) => {\n  let parseDate = new Date(unixDate * 1000)\n  let month = parseDate.toLocaleString('en-us', { month: 'long' });\n  let date = month + \" \" + parseDate.getDate() + \", \" + parseDate.getFullYear();\n\n  return date;\n}\n\nconst daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"]\n\nexport const unixToDateArray = (unixDate) => {\n  let parseDate = new Date(unixDate * 1000)\n  let prevDate = new Date((unixDate - 86400) * 1000 )\n  let nextDate = new Date((unixDate + 86400) * 1000 )\n  let currDate = parseDate.getDate();\n\n  return {\n    prevDate: {\n      date: prevDate.getDate(),\n      day: daysOfWeek[prevDate.getDay()]\n    },\n    currDate: {\n      date: currDate,\n      day: daysOfWeek[parseDate.getDay()]\n    },\n    nextDate: {\n      date: nextDate.getDate(),\n      day: daysOfWeek[nextDate.getDay()]\n    }\n  }\n}\n\nexport const unixDateToTime = (unixDate) => {\n  let date = new Date(unixDate * 1000)\n  let hours = date.getHours();\n  let minutes = \"0\" + date.getMinutes();\n\n  return convert24HourTime(hours, minutes.substr(-2))\n}\n\nfunction convert24HourTime(hours, minutes) {\n  if (hours > 12) {\n    return (hours - 12) + \":\" + minutes + \" PM\"\n  } else {\n    return hours + \":\" + minutes + \" AM\"\n  }\n}\n\nexport const hoursToUnixTime = (hourString, selectedDate) => {\n  let trimTime = hourString.replace(/ /g,'');\n  let count = trimTime.length;\n  let halfDay = trimTime.slice(-2).toLowerCase();\n  let minutes = parseInt(trimTime.slice(count-4, count-2));\n  let hours = convertHours(trimTime, count, halfDay);\n  let unixTime = selectedDate + (hours * 3600) + ( minutes * 60);\n\n  return unixTime;\n}\n\nfunction convertHours(trimTime, count, halfDay) {\n  let hours = 0\n  if (count === 6) {\n    hours = parseInt(trimTime.slice(0,1));\n    }\n  else if (count === 7) {\n    hours = parseInt(trimTime.slice(0,2));\n  }\n  if (halfDay === \"pm\") hours = hours + 12;\n\n  return hours\n}\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeDate, incrementDate, decrementDate } from '../actions/calendarActions';\nimport * as dateHelper from '../helpers/date'\nimport leftButton from \"../images/left.svg\";\nimport rightButton from \"../images/right.svg\";\n\nclass Calendar extends Component {\n\n  render() {\n\n    const { unixDate, incrementDate, decrementDate } = this.props;\n    const selectedDate = dateHelper.unixToDateArray(this.props.unixDate)\n\n    return (\n      <div>\n        <section id=\"calendar-container\">\n          <img src={leftButton} \n               className=\"calendar-button\" \n               alt=\"decrement date\" \n               onClick={() => decrementDate(unixDate)}/>\n          <div className=\"calendar-dates-container\">\n            <div className=\"date-container\" \n                 onClick={() => decrementDate(unixDate)}>\n              <h2>{selectedDate.prevDate.date}</h2>\n              <h4>{selectedDate.prevDate.day}</h4>\n            </div>\n            <div className=\"date-container\" id=\"selected-date-container\">\n              <h2>{selectedDate.currDate.date}</h2>\n              <h4>{selectedDate.currDate.day}</h4>\n            </div>\n            <div className=\"date-container\"\n                 onClick={() => incrementDate(unixDate)}>\n              <h2>{selectedDate.nextDate.date}</h2>\n              <h4>{selectedDate.nextDate.day}</h4>\n            </div>\n          </div>\n          <img src={rightButton} \n               className=\"calendar-button\" \n               alt=\"increment date\" \n               onClick={() => incrementDate(unixDate)}/>\n        </section>\n        </div>\n    )\n  }\n}\n\nCalendar.propTypes = {\n  unixDate: PropTypes.number,\n  changeDate: PropTypes.func.isRequired,\n  incrementDate: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  unixDate: state.calendar.unixDate,\n});\n\nexport default connect(mapStateToProps, { changeDate, \n                                          incrementDate,\n                                          decrementDate })(Calendar);\n\n","import { CHANGE_DATE, INCREMENT_DATE, DECREMENT_DATE } from './types';\n\nexport const changeDate = (date = new Date()) => dispatch => {\n  dispatch({\n    type: CHANGE_DATE,\n    payload: {\n      unixDate: date.setHours(0, 0, 0, 0) / 1000,\n    }\n  })\n};\n\nexport const incrementDate = (date = new Date()) => dispatch => {\n  dispatch({\n    type: INCREMENT_DATE,\n    payload: {\n      unixDate: date + 86400,\n    }\n  })\n}\n\nexport const decrementDate = (date = new Date()) => dispatch => {\n  dispatch({\n    type: DECREMENT_DATE,\n    payload: {\n      unixDate: date - 86400,\n    }\n  })\n}","export const FETCH_FOODS = 'FETCH_FOODS';\nexport const NEW_FOOD = 'NEW_FOOD';\nexport const DISPLAY_ADD_FORM = 'DISPLAY_ADD_FORM';\nexport const DESTROY_FOOD = 'DESTROY_FOOD';\nexport const CHANGE_DATE = 'CHANGE_DATE';\nexport const INCREMENT_DATE = 'INCREMENT_DATE';\nexport const DECREMENT_DATE = 'DECREMENT_DATE';\nexport const UPDATE_FOOD_ENTRY = 'UPDATE_FOOD';\n","import { FETCH_FOODS, NEW_FOOD, DESTROY_FOOD, UPDATE_FOOD_ENTRY } from './types';\n\nexport const fetchFoods = (date) => dispatch =>  {\n  fetch(`https://trigger-backend.herokuapp.com/api/v1/day_summary?date=${date}`)\n   .then(response => response.json())\n   .then(foods => dispatch({\n     type: FETCH_FOODS,\n     payload: foods.data\n   })\n );\n}\n\nexport const createFood = (foodData) => dispatch => {\n  foodPost(foodData)\n    .then(response => {\n      foodEntryPost(foodData)\n      .then(food => dispatch({\n        type: NEW_FOOD,\n        payload: preparePayload(food)\n      }))\n    })\n}\n\nexport const updateFoodEntry = (foodData) => dispatch => {\n  foodPost(foodData)\n    .then(response => {\n      foodEntryPatch(foodData)\n      .then(food => dispatch({\n        type: UPDATE_FOOD_ENTRY,\n        payload: preparePayload(food)\n      }))\n    })\n}\n\nexport const destroyFood = (foodData) => dispatch => {\n  let url = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}_entries/${foodData.id}`\n  fetch(url, {\n    method: 'DELETE',\n    headers: { 'content-type': 'application/json' }\n  })\n    .then(response => dispatch({\n      type: DESTROY_FOOD,\n      payload: {\n        id: foodData.id,\n        status: `Successfully deleted ${foodData.name} ${foodData.type} entry .`\n      }\n    }))\n}\n\nconst foodPost = (foodData) => {\n  let foodUrl = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}s`\n\n  return fetch(foodUrl, {\n    method: 'POST',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify(foodData)\n  })\n    .then(response => response.json())\n    .then(json => { \n      foodData.typeId = json.id;\n      return foodData;\n     })\n}\n\nconst foodEntryPost = (foodData) => {\n  let foodEntryUrl = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}_entries`\n\n  return fetch(foodEntryUrl, {\n    method: 'POST',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({\n      [`${foodData.type}_id`]: foodData.typeId,\n      time: foodData.time\n    })\n  })\n  .then(response => response.json())\n  .then(json => {\n    foodData.status = json.status;\n    return foodData\n  })\n}\n\nconst foodEntryPatch = (foodData) => {\n  let foodEntryUrl = `https://trigger-backend.herokuapp.com/api/v1/${foodData.type}_entries/${foodData.id}`\n\n  return fetch(foodEntryUrl, {\n    method: 'PATCH',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify({\n      [`${foodData.type}_id`]: foodData.typeId,\n      time: foodData.time\n    })\n  })\n    .then(response => response.json())\n    .then(json => { \n      foodData.status = json.status\n      return foodData\n    })\n}\n\nconst preparePayload = (foodData) => {\n  return {\n    id: foodData.typeId,\n    type: \"day_summary\",\n    status: foodData.status,\n    attributes: {\n      time: foodData.time,\n      type: foodData.type,\n      name: foodData.name\n    }\n  }\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchFoods, destroyFood, updateFoodEntry } from '../actions/foodActions';\nimport * as dateHelper from '../helpers/date';\nimport deleteButton from \"../images/delete.svg\";\nimport editButton from \"../images/edit.svg\";\n\nclass Foods extends Component {\n  constructor(props) {\n    super(props);\n    this.displayDialog = this.displayDialog.bind(this);\n    this.updateDialog = this.updateDialog.bind(this);\n    this.deleteDialog = this.deleteDialog.bind(this);\n    this.cancelDialog = this.cancelDialog.bind(this);\n    this.confirmDelete = this.confirmDelete.bind(this);\n    this.closeStatus = this.closeStatus.bind(this);\n    this.foodsContainer = React.createRef();\n    this.statusMessage = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.fetchFoods(this.props.unixDate);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.unixDate !== nextProps.unixDate) {\n      this.props.fetchFoods(nextProps.unixDate);\n    }\n  }\n\n  displayDialog = (event, type) => {\n    let card = event.target.parentNode.parentNode;\n    let dialog = card.querySelector(`.${type}-dialog-container`);\n    let editButton = card.querySelector(\".edit-card\");\n    let deleteButton = card.querySelector(\".delete-card\");\n\n    dialog.style.display = \"flex\";\n    editButton.style.visibility = \"hidden\";\n    deleteButton.style.visibility = \"hidden\";\n  }\n\n  updateDialog = (event) => {\n    let card = event.target.parentNode.parentNode;\n    let name = card.querySelector(\".card-name\");\n    let time = card.querySelector(\".card-time\");\n\n    this.displayDialog(event, \"update\");\n    name.contentEditable = true;\n    name.className = \"card-name editable\";\n    time.contentEditable = true;\n    time.className = \"card-time editable\";\n  }\n\n  deleteDialog = (event) => {\n    this.displayDialog(event, \"delete\")\n  }\n\n  cancelDialog = (event) => {\n    let card = event.target.parentNode.parentNode.parentNode.parentNode;\n    let name = card.querySelector(\".card-name\");\n    let time = card.querySelector(\".card-time\");\n    let updateDialog = card.querySelector(\".update-dialog-container\");\n    let deleteDialog = card.querySelector(\".delete-dialog-container\");\n    let editButton = card.querySelector(\".edit-card\");\n    let deleteButton = card.querySelector(\".delete-card\");\n    \n    updateDialog.style.display = \"none\";\n    deleteDialog.style.display = \"none\";\n    editButton.style.visibility = \"visible\";\n    deleteButton.style.visibility = \"visible\";\n    name.contentEditable = false;\n    name.className = \"card-name\";\n    time.contentEditable = false;\n    time.className = \"card-time\";\n  }\n\n  confirmUpdate = (event) => {\n    let card = event.target.parentNode.parentNode.parentNode.parentNode;\n    let time = card.querySelector(\".card-time\").innerText\n    let foodData = {\n      id: card.id.split(\"-\")[2],\n      type: card.id.split(\"-\")[0],\n      name: card.querySelector(\".card-name\").innerText,\n      time: dateHelper.hoursToUnixTime(time, this.props.unixDate)\n      \n    }\n\n    this.props.updateFoodEntry(foodData);\n    this.cancelDialog(event);\n    this.foodsContainer.current.scrollTop = 0;\n    this.statusMessage.current.style.display = \"block\";\n  }\n\n  confirmDelete = (event) => {\n    let card = event.target.parentNode.parentNode.parentNode.parentNode;\n    let type = card.id.split(\"-\")[0]\n    let id = card.id.split(\"-\")[2]\n    let name = card.querySelector(\".card-name\").innerText;\n    let foodData = {\n      id: id,\n      type: type,\n      name: name\n    }\n\n    this.props.destroyFood(foodData);\n    this.foodsContainer.current.scrollTop = 0;\n    this.statusMessage.current.style.display = \"flex\";\n  }\n\n  closeStatus = (event) => {\n    let card = event.target.parentNode;\n\n    card.style.display = \"none\"\n  }\n\n  render() {\n\n    const foodItems = this.props.foods.map(food => (\n      <div key={[food.id, food.attributes.type]}\n           id={food.attributes.type + \"-card-\" + food.id}\n           className={\"card-container \" + food.attributes.type} >\n        <div className=\"card-container-visible\">\n          <div className=\"name-time-container\" >\n            <h5 className=\"card-name\"> {food.attributes.name} </h5>\n            <h5 className=\"card-time\"> {dateHelper.unixDateToTime(food.attributes.time)}</h5>\n          </div>\n          <img src={editButton}\n               className=\"edit-card\"\n               alt=\"edit food or reaction button\"\n               onClick={event => this.updateDialog(event)} />\n          <img src={deleteButton}\n               className=\"delete-card\" \n               alt=\"delete food or reaction button\"\n               onClick={event => this.deleteDialog(event)} />\n        </div>\n        <div className=\"card-container-hidden\">\n          <div className=\"delete-dialog-container\">\n            <div className=\"dialog-prompt\">\n              <h5>Are you sure you want to delete {food.attributes.name}?</h5>\n            </div>\n            <div className=\"dialog-buttons\">\n              <button className=\"dialog-button\" \n                      onClick={event => this.cancelDialog(event)}>\n                Cancel\n              </button>\n              <button className=\"dialog-button\"\n                      onClick={event => this.confirmDelete(event)}>\n                Delete\n              </button>\n            </div>\n          </div>\n          <div className=\"update-dialog-container\">\n            <div className=\"dialog-prompt\">\n              <h5>Edit name and date fields above.</h5>\n            </div>\n            <div className=\"dialog-buttons\">\n              <button className=\"dialog-button\" \n                      onClick={event => this.cancelDialog(event)}>\n                Cancel\n              </button>\n              <button className=\"dialog-button\"\n                      onClick={event => this.confirmUpdate(event)}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ))\n\n    return(\n      <div id=\"day-summary-container\" ref={this.foodsContainer}>\n        <div className=\"card-container status\" ref={this.statusMessage}>\n          <h5 id=\"foods-status\">{this.props.status}</h5>\n          <img src={deleteButton}\n            className=\"delete-card close-status\"\n            alt=\"close status message\"\n            onClick={event => this.closeStatus(event)} />  \n        </div>\n        {foodItems}\n      </div>\n    )\n  }\n}\n\nFoods.propTypes = {\n  fetchFoods: PropTypes.func.isRequired,\n  destroyFood: PropTypes.func.isRequired,\n  updateFoodEntry: PropTypes.func.isRequired,\n  foods: PropTypes.array.isRequired,\n  newFood: PropTypes.object,\n  status: PropTypes.string,\n  unixDate: PropTypes.number,\n}\n\nconst mapStateToProps = state => ({\n  foods: state.foods.items,\n  newFood: state.foods.item,\n  status: state.foods.changedItem.status,\n  unixDate: state.calendar.unixDate,\n});\n\nexport default connect(mapStateToProps, { fetchFoods, destroyFood, updateFoodEntry })(Foods);\n","import { DISPLAY_ADD_FORM } from './types';\n\nexport const toggleDisplayAddForm = () => ({\n  type: DISPLAY_ADD_FORM\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createFood } from '../actions/foodActions';\nimport * as dateHelper from '../helpers/date';\nimport { toggleDisplayAddForm } from '../actions/foodFormActions';\n\nclass FoodForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'food',\n      name: '',\n      time: '',\n      status: ''\n      };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.addFood = this.addFood.bind(this);\n    this.addReaction = this.addReaction.bind(this);\n    this.renderResponse = this.renderResponse.bind(this);\n    this.clearResponse = this.clearResponse.bind(this);\n    this.formContainer = React.createRef();\n    this.fieldsContainer = React.createRef();\n    this.responseContainer = React.createRef();\n    this.foodName = React.createRef();\n    this.foodTime = React.createRef();\n  }\n\n  // change this to will receive props, compare displayAddForm\n  componentDidUpdate() {\n    this.toggleDisplay();\n  }\n\n  resetState() {\n    this.setState({\n      name: '',\n      time: ''\n    })\n  }\n\n  toggleDisplay() {\n    if(this.props.displayAddForm) {\n      this.formContainer.current.style.bottom = \"60px\";\n    } else {\n      this.formContainer.current.style.bottom = \"-280px\";\n      setTimeout(() => {\n        this.fieldsContainer.current.style.visibility = \"visible\";\n        this.responseContainer.current.style.visibility = \"hidden\";\n      }, 500);\n    }\n  }\n\n  addFood() {\n    this.setState({ type: \"food\"})\n  }\n\n  addReaction() {\n    this.setState({ type: \"reaction\" })\n  }\n\n  onChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n\n    const food = {\n      type: this.state.type,\n      name: this.state.name,\n      time: dateHelper.hoursToUnixTime(this.state.time, this.props.unixDate)\n    }\n    this.props.createFood(food);\n    this.renderResponse(this.props.foodResponse);\n  }\n\n  renderResponse(response) {\n    setTimeout(() => {\n      this.responseContainer.current.style.visibility = \"visible\";\n      this.fieldsContainer.current.style.visibility = \"hidden\";\n      this.resetState();\n    }, 200);\n  }\n\n  clearResponse() {\n    this.resetState();\n    this.responseContainer.current.style.visibility = \"hidden\";\n    this.fieldsContainer.current.style.visibility = \"visible\";\n  }\n\n  render() {\n\n    const selectedTab = (type) => {\n      return type === this.state.type ? \"selected-tab\" : \"\"\n    }\n\n    const namePlaceholder = () => {\n      let type = this.state.type\n      let capType = type.charAt(0).toUpperCase() + type.slice(1)\n      return `Enter Name of ${capType}`;\n    }\n\n    return(\n      <div id=\"food-form-container\" ref={this.formContainer}>\n        <div className=\"food-form-tabs-container\">\n          <div className={\"food-form-tab add-food-tab \" + selectedTab(\"food\")}\n               onClick={this.addFood}>\n            <h4>Add Food</h4>\n          </div>\n          <div className={\"food-form-tab add-reaction-tab \" + selectedTab(\"reaction\")}\n               onClick={this.addReaction}>\n            <h4>Add Reaction</h4>\n          </div>\n        </div>\n        <div id=\"food-form-fields-container\" ref={this.fieldsContainer}>\n          <form onSubmit={this.onSubmit}>\n            <div>\n              <input type=\"text\"\n                     name=\"name\"\n                     value={this.state.name}\n                     ref={this.foodName}\n                     placeholder={namePlaceholder()}\n                     onChange={this.onChange}\n              />\n            </div>\n            <div>\n              <input type=\"text\"\n                     name=\"time\"\n                     value={this.state.time}\n                     ref={this.foodTime}\n                     placeholder=\"Enter Time\"\n                     onChange={this.onChange}\n              />\n              <button type=\"submit\"> Submit </button>\n            </div>\n          </form>\n        </div>\n        <div id=\"food-form-response-container\" ref={this.responseContainer}>\n          <h2 id=\"food-form-response\">{this.props.foodResponse}</h2>\n          <div id=\"response-buttons-container\">\n          <h3 className=\"close-form\" onClick={this.props.toggleDisplayAddForm}>Close</h3>\n          <h3 className=\"close-form\" onClick={this.clearResponse}>Clear</h3>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nFoodForm.propTypes = {\n  createFood: PropTypes.func.isRequired,\n  displayAddForm: PropTypes.bool,\n  foodResponse: PropTypes.string,\n  unixDate: PropTypes.number,\n  toggleDisplayAddForm: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  displayAddForm: state.foodForm.display,\n  foodResponse: state.foods.item.status,\n  unixDate: state.calendar.unixDate,\n});\n\nexport default connect(mapStateToProps, { createFood, toggleDisplayAddForm } )(FoodForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { toggleDisplayAddForm } from '../actions/foodFormActions';\nimport homeButton from \"../images/home.svg\";\nimport analyticsButton from \"../images/analytics.svg\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addFormDisplayed: false\n    }\n    this.displayAddForm = this.displayAddForm.bind(this);\n    this.addForm = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.displayAddForm !== this.props.displayAddForm) {\n      this.addFormBackground();\n    }\n  }\n\n  displayAddForm = () => {\n    this.addFormBackground();\n    this.props.toggleDisplayAddForm()\n  }\n\n  addFormBackground = () => {\n    let button = this.addForm.current\n\n    this.props.displayAddForm ?\n      button.style = \"background-color: #B37C57\" :\n      button.style = \"background-color: red\";\n  }\n\n  render() {\n\n    return (\n      <footer>\n        <img className=\"home-button\" src={homeButton} alt=\"home button\" />\n        <button className=\"add-button\"\n                ref={this.addForm}\n                onClick={this.displayAddForm}>\n          {this.props.displayAddForm ? \"x\" : \"+\"}\n        </button>\n        <img className=\"analytics-button\" src={analyticsButton} alt=\"analytics button\" />\n      </footer>\n    )\n  }\n}\n\nNav.propTypes = {\n  toggleDisplayAddForm: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  displayAddForm: state.foodForm.display,\n});\n\nexport default connect(mapStateToProps, { toggleDisplayAddForm })(Nav);\n","import { FETCH_FOODS, NEW_FOOD, DESTROY_FOOD, UPDATE_FOOD_ENTRY } from '../actions/types'\nconst initialState = {\n  items: [],\n  item: {},\n  changedItem: {}\n}\nexport default function(state = initialState, action) {\n  let newState = state;\n\n  switch (action.type) {\n    case FETCH_FOODS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    case NEW_FOOD:\n      newState.items.push(action.payload)\n      newState.items.sort((a,b) => a.attributes.time - b.attributes.time) \n      return {\n        ...newState,\n        item: action.payload\n      }\n    case DESTROY_FOOD:\n      newState.items = state.items.filter(food => {\n        return food.id !== action.payload.id;\n      })\n\n      return {\n        ...newState,\n        changedItem: action.payload\n      }\n    case UPDATE_FOOD_ENTRY:\n      newState.items = state.items.map(food => {\n        return food.id === action.payload.id ? action.payload : food\n      }).sort((a, b) => a.time - b.time )\n\n      return {\n        ...newState,\n        changedItem: action.payload\n      }\n    default:\n     return state;\n\n  }\n}\n","import { DISPLAY_ADD_FORM } from '../actions/types'\n\nconst initialState = {\n  display: false,\n}\n\nconst foodFormReducer = (state = initialState, action) => {\n  let newState = state\n  switch (action.type) {\n    case DISPLAY_ADD_FORM:\n      return {display: !newState.display}\n    default:\n      return state;\n  }\n};\n\nexport default foodFormReducer;\n","import { CHANGE_DATE, INCREMENT_DATE, DECREMENT_DATE } from '../actions/types'\n\nconst currentDate = () => {\n  let now = new Date()\n\n  return now.setHours(0, 0, 0, 0) / 1000\n}\n\nconst initialState = {\n  unixDate: currentDate(),\n}\n\nconst calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_DATE:\n      return {\n        ...state,\n        unixDate: action.payload.unixDate,\n      }\n    case INCREMENT_DATE:\n      return {\n        ...state,\n        unixDate: action.payload.unixDate,\n      }\n    case DECREMENT_DATE:\n      return {\n        ...state,\n        unixDate: action.payload.unixDate,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default calendarReducer;\n\n","import { combineReducers } from 'redux';\nimport foodReducer from './foodReducer';\nimport foodFormReducer from './foodFormReducer';\nimport calendarReducer from './calendarReducer';\n\nexport default combineReducers({\n  foods: foodReducer,\n  foodForm: foodFormReducer,\n  calendar: calendarReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport Calendar from './components/Calendar';\nimport Foods from './components/Foods';\nimport FoodForm from './components/FoodForm';\nimport Nav from './components/Nav';\n\nimport store from './store';\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <header>\n            <h1>Trigger</h1>\n          </header>\n          <Calendar />\n          <Foods />\n          <FoodForm />\n          <Nav />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}